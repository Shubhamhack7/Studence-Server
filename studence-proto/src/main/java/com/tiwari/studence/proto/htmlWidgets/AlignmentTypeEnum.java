// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: htmlWidgets.proto

package com.tiwari.studence.proto.htmlWidgets;

/**
 * Protobuf enum {@code com.tiwari.studence.proto.htmlWidgets.AlignmentTypeEnum}
 */
public enum AlignmentTypeEnum
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>UNKNOWN_ALIGN_TYPE = 0;</code>
   */
  UNKNOWN_ALIGN_TYPE(0),
  /**
   * <code>ALIGN_CENTER = 1;</code>
   */
  ALIGN_CENTER(1),
  /**
   * <code>ALIGN_LEFT = 2;</code>
   */
  ALIGN_LEFT(2),
  /**
   * <code>ALIGN_RIGHT = 3;</code>
   */
  ALIGN_RIGHT(3),
  /**
   * <code>ALIGN_TOP = 4;</code>
   */
  ALIGN_TOP(4),
  /**
   * <code>ALIGN_BOTTOM = 5;</code>
   */
  ALIGN_BOTTOM(5),
  /**
   * <code>ALIGN_HORIZONTAL = 6;</code>
   */
  ALIGN_HORIZONTAL(6),
  /**
   * <code>ALIGN_VERTICAL = 7;</code>
   */
  ALIGN_VERTICAL(7),
  /**
   * <code>ALIGN_START = 8;</code>
   */
  ALIGN_START(8),
  /**
   * <code>ALIGN_END = 9;</code>
   */
  ALIGN_END(9),
  /**
   * <code>ALIGN_SPACE_BETWEEN = 10;</code>
   */
  ALIGN_SPACE_BETWEEN(10),
  /**
   * <code>ALIGN_SPACE_AROUND = 11;</code>
   */
  ALIGN_SPACE_AROUND(11),
  /**
   * <code>ALIGN_STRETCH = 12;</code>
   */
  ALIGN_STRETCH(12),
  /**
   * <code>ALIGN_AXIS_MIN = 13;</code>
   */
  ALIGN_AXIS_MIN(13),
  /**
   * <code>ALIGN_AXIS_MAX = 14;</code>
   */
  ALIGN_AXIS_MAX(14),
  UNRECOGNIZED(-1),
  ;

  /**
   * <code>UNKNOWN_ALIGN_TYPE = 0;</code>
   */
  public static final int UNKNOWN_ALIGN_TYPE_VALUE = 0;
  /**
   * <code>ALIGN_CENTER = 1;</code>
   */
  public static final int ALIGN_CENTER_VALUE = 1;
  /**
   * <code>ALIGN_LEFT = 2;</code>
   */
  public static final int ALIGN_LEFT_VALUE = 2;
  /**
   * <code>ALIGN_RIGHT = 3;</code>
   */
  public static final int ALIGN_RIGHT_VALUE = 3;
  /**
   * <code>ALIGN_TOP = 4;</code>
   */
  public static final int ALIGN_TOP_VALUE = 4;
  /**
   * <code>ALIGN_BOTTOM = 5;</code>
   */
  public static final int ALIGN_BOTTOM_VALUE = 5;
  /**
   * <code>ALIGN_HORIZONTAL = 6;</code>
   */
  public static final int ALIGN_HORIZONTAL_VALUE = 6;
  /**
   * <code>ALIGN_VERTICAL = 7;</code>
   */
  public static final int ALIGN_VERTICAL_VALUE = 7;
  /**
   * <code>ALIGN_START = 8;</code>
   */
  public static final int ALIGN_START_VALUE = 8;
  /**
   * <code>ALIGN_END = 9;</code>
   */
  public static final int ALIGN_END_VALUE = 9;
  /**
   * <code>ALIGN_SPACE_BETWEEN = 10;</code>
   */
  public static final int ALIGN_SPACE_BETWEEN_VALUE = 10;
  /**
   * <code>ALIGN_SPACE_AROUND = 11;</code>
   */
  public static final int ALIGN_SPACE_AROUND_VALUE = 11;
  /**
   * <code>ALIGN_STRETCH = 12;</code>
   */
  public static final int ALIGN_STRETCH_VALUE = 12;
  /**
   * <code>ALIGN_AXIS_MIN = 13;</code>
   */
  public static final int ALIGN_AXIS_MIN_VALUE = 13;
  /**
   * <code>ALIGN_AXIS_MAX = 14;</code>
   */
  public static final int ALIGN_AXIS_MAX_VALUE = 14;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static AlignmentTypeEnum valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static AlignmentTypeEnum forNumber(int value) {
    switch (value) {
      case 0: return UNKNOWN_ALIGN_TYPE;
      case 1: return ALIGN_CENTER;
      case 2: return ALIGN_LEFT;
      case 3: return ALIGN_RIGHT;
      case 4: return ALIGN_TOP;
      case 5: return ALIGN_BOTTOM;
      case 6: return ALIGN_HORIZONTAL;
      case 7: return ALIGN_VERTICAL;
      case 8: return ALIGN_START;
      case 9: return ALIGN_END;
      case 10: return ALIGN_SPACE_BETWEEN;
      case 11: return ALIGN_SPACE_AROUND;
      case 12: return ALIGN_STRETCH;
      case 13: return ALIGN_AXIS_MIN;
      case 14: return ALIGN_AXIS_MAX;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<AlignmentTypeEnum>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      AlignmentTypeEnum> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<AlignmentTypeEnum>() {
          public AlignmentTypeEnum findValueByNumber(int number) {
            return AlignmentTypeEnum.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.tiwari.studence.proto.htmlWidgets.HtmlWidgets.getDescriptor().getEnumTypes().get(2);
  }

  private static final AlignmentTypeEnum[] VALUES = values();

  public static AlignmentTypeEnum valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private AlignmentTypeEnum(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:com.tiwari.studence.proto.htmlWidgets.AlignmentTypeEnum)
}

