// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: devicePb.proto

package com.tiwari.studence.proto.devices;

/**
 * Protobuf enum {@code com.tiwari.studence.proto.devices.DeviceIPAddressType}
 */
public enum DeviceIPAddressType
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>UNKNOWN_IPADDRESS_TYPE = 0;</code>
   */
  UNKNOWN_IPADDRESS_TYPE(0),
  /**
   * <code>IPV4 = 1;</code>
   */
  IPV4(1),
  /**
   * <code>IPV6 = 2;</code>
   */
  IPV6(2),
  UNRECOGNIZED(-1),
  ;

  /**
   * <code>UNKNOWN_IPADDRESS_TYPE = 0;</code>
   */
  public static final int UNKNOWN_IPADDRESS_TYPE_VALUE = 0;
  /**
   * <code>IPV4 = 1;</code>
   */
  public static final int IPV4_VALUE = 1;
  /**
   * <code>IPV6 = 2;</code>
   */
  public static final int IPV6_VALUE = 2;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static DeviceIPAddressType valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static DeviceIPAddressType forNumber(int value) {
    switch (value) {
      case 0: return UNKNOWN_IPADDRESS_TYPE;
      case 1: return IPV4;
      case 2: return IPV6;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<DeviceIPAddressType>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      DeviceIPAddressType> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<DeviceIPAddressType>() {
          public DeviceIPAddressType findValueByNumber(int number) {
            return DeviceIPAddressType.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.tiwari.studence.proto.devices.DevicePb.getDescriptor().getEnumTypes().get(3);
  }

  private static final DeviceIPAddressType[] VALUES = values();

  public static DeviceIPAddressType valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private DeviceIPAddressType(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:com.tiwari.studence.proto.devices.DeviceIPAddressType)
}

