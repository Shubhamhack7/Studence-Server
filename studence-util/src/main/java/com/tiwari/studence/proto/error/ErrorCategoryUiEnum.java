// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: error.proto

package com.tiwari.studence.proto.error;

/**
 * Protobuf enum {@code com.tiwari.studence.proto.error.ErrorCategoryUiEnum}
 */
public enum ErrorCategoryUiEnum
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>UNKNOWN_ERROR_CATEGORY = 0;</code>
   */
  UNKNOWN_ERROR_CATEGORY(0),
  /**
   * <code>INPUT_VALIDATION_ERROR = 1;</code>
   */
  INPUT_VALIDATION_ERROR(1),
  /**
   * <pre>
   *deprecated
   * </pre>
   *
   * <code>DATA_MISMATCH_ERROR = 2;</code>
   */
  DATA_MISMATCH_ERROR(2),
  /**
   * <code>SELF_CODE_ERROR = 3;</code>
   */
  SELF_CODE_ERROR(3),
  /**
   * <code>NO_SLOW_OR_BLOCKED_DOWNSTREAM_CONNECTION_ERROR = 4;</code>
   */
  NO_SLOW_OR_BLOCKED_DOWNSTREAM_CONNECTION_ERROR(4),
  /**
   * <pre>
   *500 if received 500 from downstream.
   * </pre>
   *
   * <code>DOWNSTREAM_SERVER_ERROR = 5;</code>
   */
  DOWNSTREAM_SERVER_ERROR(5),
  /**
   * <pre>
   *409 For diff-update this should be handled by server by retrying.
   * </pre>
   *
   * <code>CONCURRENT_CALL_ERROR = 6;</code>
   */
  CONCURRENT_CALL_ERROR(6),
  /**
   * <pre>
   *deprecated
   * </pre>
   *
   * <code>BLOCKED_DOWNSTREAM_CONNECTION_ERROR = 7;</code>
   */
  BLOCKED_DOWNSTREAM_CONNECTION_ERROR(7),
  /**
   * <pre>
   *deprecated
   * </pre>
   *
   * <code>NO_OR_SLOW_DOWNSTREAM_CONNECTION_ERROR = 8;</code>
   */
  NO_OR_SLOW_DOWNSTREAM_CONNECTION_ERROR(8),
  /**
   * <pre>
   *deprecated
   * </pre>
   *
   * <code>DEVICE_NOT_REACHABLE = 9;</code>
   */
  DEVICE_NOT_REACHABLE(9),
  /**
   * <pre>
   * 404
   * </pre>
   *
   * <code>ITEM_NOT_FOUND = 10;</code>
   */
  ITEM_NOT_FOUND(10),
  /**
   * <code>DUPLICATE_ITEM_FOUND = 11;</code>
   */
  DUPLICATE_ITEM_FOUND(11),
  /**
   * <code>SERVER_MISCONFIGURED_ERROR = 12;</code>
   */
  SERVER_MISCONFIGURED_ERROR(12),
  /**
   * <code>REQUEST_TIMEOUT = 13;</code>
   */
  REQUEST_TIMEOUT(13),
  /**
   * <pre>
   * 503 (if received 429 / provisioned throughput/throttling exception from downstream)
   * </pre>
   *
   * <code>PROVISIONED_THROUGHPUT_EXCEPTION = 14;</code>
   */
  PROVISIONED_THROUGHPUT_EXCEPTION(14),
  /**
   * <pre>
   *503 if received 503 from downstream.
   * </pre>
   *
   * <code>DOWNSTREAM_SERVER_UNAVAILABLE_ERROR = 15;</code>
   */
  DOWNSTREAM_SERVER_UNAVAILABLE_ERROR(15),
  /**
   * <pre>
   *504, if received 504 from downstream.
   * </pre>
   *
   * <code>DOWNSTREAM_REQUEST_TIMEOUT_ERROR = 16;</code>
   */
  DOWNSTREAM_REQUEST_TIMEOUT_ERROR(16),
  /**
   * <pre>
   *if entity version mismatched
   * </pre>
   *
   * <code>VERSION_MISMATCH = 17;</code>
   */
  VERSION_MISMATCH(17),
  /**
   * <pre>
   *if entity version mismatched
   * </pre>
   *
   * <code>UN_AUTHORIZED = 18;</code>
   */
  UN_AUTHORIZED(18),
  UNRECOGNIZED(-1),
  ;

  /**
   * <code>UNKNOWN_ERROR_CATEGORY = 0;</code>
   */
  public static final int UNKNOWN_ERROR_CATEGORY_VALUE = 0;
  /**
   * <code>INPUT_VALIDATION_ERROR = 1;</code>
   */
  public static final int INPUT_VALIDATION_ERROR_VALUE = 1;
  /**
   * <pre>
   *deprecated
   * </pre>
   *
   * <code>DATA_MISMATCH_ERROR = 2;</code>
   */
  public static final int DATA_MISMATCH_ERROR_VALUE = 2;
  /**
   * <code>SELF_CODE_ERROR = 3;</code>
   */
  public static final int SELF_CODE_ERROR_VALUE = 3;
  /**
   * <code>NO_SLOW_OR_BLOCKED_DOWNSTREAM_CONNECTION_ERROR = 4;</code>
   */
  public static final int NO_SLOW_OR_BLOCKED_DOWNSTREAM_CONNECTION_ERROR_VALUE = 4;
  /**
   * <pre>
   *500 if received 500 from downstream.
   * </pre>
   *
   * <code>DOWNSTREAM_SERVER_ERROR = 5;</code>
   */
  public static final int DOWNSTREAM_SERVER_ERROR_VALUE = 5;
  /**
   * <pre>
   *409 For diff-update this should be handled by server by retrying.
   * </pre>
   *
   * <code>CONCURRENT_CALL_ERROR = 6;</code>
   */
  public static final int CONCURRENT_CALL_ERROR_VALUE = 6;
  /**
   * <pre>
   *deprecated
   * </pre>
   *
   * <code>BLOCKED_DOWNSTREAM_CONNECTION_ERROR = 7;</code>
   */
  public static final int BLOCKED_DOWNSTREAM_CONNECTION_ERROR_VALUE = 7;
  /**
   * <pre>
   *deprecated
   * </pre>
   *
   * <code>NO_OR_SLOW_DOWNSTREAM_CONNECTION_ERROR = 8;</code>
   */
  public static final int NO_OR_SLOW_DOWNSTREAM_CONNECTION_ERROR_VALUE = 8;
  /**
   * <pre>
   *deprecated
   * </pre>
   *
   * <code>DEVICE_NOT_REACHABLE = 9;</code>
   */
  public static final int DEVICE_NOT_REACHABLE_VALUE = 9;
  /**
   * <pre>
   * 404
   * </pre>
   *
   * <code>ITEM_NOT_FOUND = 10;</code>
   */
  public static final int ITEM_NOT_FOUND_VALUE = 10;
  /**
   * <code>DUPLICATE_ITEM_FOUND = 11;</code>
   */
  public static final int DUPLICATE_ITEM_FOUND_VALUE = 11;
  /**
   * <code>SERVER_MISCONFIGURED_ERROR = 12;</code>
   */
  public static final int SERVER_MISCONFIGURED_ERROR_VALUE = 12;
  /**
   * <code>REQUEST_TIMEOUT = 13;</code>
   */
  public static final int REQUEST_TIMEOUT_VALUE = 13;
  /**
   * <pre>
   * 503 (if received 429 / provisioned throughput/throttling exception from downstream)
   * </pre>
   *
   * <code>PROVISIONED_THROUGHPUT_EXCEPTION = 14;</code>
   */
  public static final int PROVISIONED_THROUGHPUT_EXCEPTION_VALUE = 14;
  /**
   * <pre>
   *503 if received 503 from downstream.
   * </pre>
   *
   * <code>DOWNSTREAM_SERVER_UNAVAILABLE_ERROR = 15;</code>
   */
  public static final int DOWNSTREAM_SERVER_UNAVAILABLE_ERROR_VALUE = 15;
  /**
   * <pre>
   *504, if received 504 from downstream.
   * </pre>
   *
   * <code>DOWNSTREAM_REQUEST_TIMEOUT_ERROR = 16;</code>
   */
  public static final int DOWNSTREAM_REQUEST_TIMEOUT_ERROR_VALUE = 16;
  /**
   * <pre>
   *if entity version mismatched
   * </pre>
   *
   * <code>VERSION_MISMATCH = 17;</code>
   */
  public static final int VERSION_MISMATCH_VALUE = 17;
  /**
   * <pre>
   *if entity version mismatched
   * </pre>
   *
   * <code>UN_AUTHORIZED = 18;</code>
   */
  public static final int UN_AUTHORIZED_VALUE = 18;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static ErrorCategoryUiEnum valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static ErrorCategoryUiEnum forNumber(int value) {
    switch (value) {
      case 0: return UNKNOWN_ERROR_CATEGORY;
      case 1: return INPUT_VALIDATION_ERROR;
      case 2: return DATA_MISMATCH_ERROR;
      case 3: return SELF_CODE_ERROR;
      case 4: return NO_SLOW_OR_BLOCKED_DOWNSTREAM_CONNECTION_ERROR;
      case 5: return DOWNSTREAM_SERVER_ERROR;
      case 6: return CONCURRENT_CALL_ERROR;
      case 7: return BLOCKED_DOWNSTREAM_CONNECTION_ERROR;
      case 8: return NO_OR_SLOW_DOWNSTREAM_CONNECTION_ERROR;
      case 9: return DEVICE_NOT_REACHABLE;
      case 10: return ITEM_NOT_FOUND;
      case 11: return DUPLICATE_ITEM_FOUND;
      case 12: return SERVER_MISCONFIGURED_ERROR;
      case 13: return REQUEST_TIMEOUT;
      case 14: return PROVISIONED_THROUGHPUT_EXCEPTION;
      case 15: return DOWNSTREAM_SERVER_UNAVAILABLE_ERROR;
      case 16: return DOWNSTREAM_REQUEST_TIMEOUT_ERROR;
      case 17: return VERSION_MISMATCH;
      case 18: return UN_AUTHORIZED;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<ErrorCategoryUiEnum>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      ErrorCategoryUiEnum> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<ErrorCategoryUiEnum>() {
          public ErrorCategoryUiEnum findValueByNumber(int number) {
            return ErrorCategoryUiEnum.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.tiwari.studence.proto.error.Error.getDescriptor().getEnumTypes().get(1);
  }

  private static final ErrorCategoryUiEnum[] VALUES = values();

  public static ErrorCategoryUiEnum valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private ErrorCategoryUiEnum(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:com.tiwari.studence.proto.error.ErrorCategoryUiEnum)
}

