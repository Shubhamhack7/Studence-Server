// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: fileInfoPb.proto

package com.tiwari.studence.proto.fileInfo;

/**
 * Protobuf enum {@code com.tiwari.studence.proto.fileInfo.FileSizeUnit}
 */
public enum FileSizeUnit
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>UNKNOWN_UNIT = 0;</code>
   */
  UNKNOWN_UNIT(0),
  /**
   * <code>BYTE = 1;</code>
   */
  BYTE(1),
  /**
   * <code>KILOBYTE = 2;</code>
   */
  KILOBYTE(2),
  /**
   * <code>MEGABYTE = 3;</code>
   */
  MEGABYTE(3),
  /**
   * <code>GIGABYTE = 4;</code>
   */
  GIGABYTE(4),
  /**
   * <code>TERABYTE = 5;</code>
   */
  TERABYTE(5),
  UNRECOGNIZED(-1),
  ;

  /**
   * <code>UNKNOWN_UNIT = 0;</code>
   */
  public static final int UNKNOWN_UNIT_VALUE = 0;
  /**
   * <code>BYTE = 1;</code>
   */
  public static final int BYTE_VALUE = 1;
  /**
   * <code>KILOBYTE = 2;</code>
   */
  public static final int KILOBYTE_VALUE = 2;
  /**
   * <code>MEGABYTE = 3;</code>
   */
  public static final int MEGABYTE_VALUE = 3;
  /**
   * <code>GIGABYTE = 4;</code>
   */
  public static final int GIGABYTE_VALUE = 4;
  /**
   * <code>TERABYTE = 5;</code>
   */
  public static final int TERABYTE_VALUE = 5;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static FileSizeUnit valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static FileSizeUnit forNumber(int value) {
    switch (value) {
      case 0: return UNKNOWN_UNIT;
      case 1: return BYTE;
      case 2: return KILOBYTE;
      case 3: return MEGABYTE;
      case 4: return GIGABYTE;
      case 5: return TERABYTE;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<FileSizeUnit>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      FileSizeUnit> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<FileSizeUnit>() {
          public FileSizeUnit findValueByNumber(int number) {
            return FileSizeUnit.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.tiwari.studence.proto.fileInfo.FileInfoPbOuterClass.getDescriptor().getEnumTypes().get(1);
  }

  private static final FileSizeUnit[] VALUES = values();

  public static FileSizeUnit valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private FileSizeUnit(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:com.tiwari.studence.proto.fileInfo.FileSizeUnit)
}

