// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: error.proto

package com.tiwari.studence.proto.error;

/**
 * Protobuf enum {@code com.tiwari.studence.proto.error.ErrorTypePbEnum}
 */
public enum ErrorTypePbEnum
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>ERORTYPE_UNKNOWN_ERROR = 0;</code>
   */
  ERORTYPE_UNKNOWN_ERROR(0),
  /**
   * <pre>
   * For top requests from client
   * </pre>
   *
   * <code>PARSE_FAILED = 1;</code>
   */
  PARSE_FAILED(1),
  /**
   * <code>AUTHENTICATION_FAILED = 2;</code>
   */
  AUTHENTICATION_FAILED(2),
  /**
   * <code>AUTHORIZATION_FAILED = 3;</code>
   */
  AUTHORIZATION_FAILED(3),
  /**
   * <pre>
   * For single value in a request
   * </pre>
   *
   * <code>INVALID_VALUE = 4;</code>
   */
  INVALID_VALUE(4),
  /**
   * <pre>
   * For complex request data validations.
   * </pre>
   *
   * <code>VALIDATION_FAILED = 5;</code>
   */
  VALIDATION_FAILED(5),
  /**
   * <code>SERVICE_CALL_FAILED = 6;</code>
   */
  SERVICE_CALL_FAILED(6),
  /**
   * <pre>
   * For read, updates, deletes;
   * </pre>
   *
   * <code>NOT_FOUND = 7;</code>
   */
  NOT_FOUND(7),
  /**
   * <pre>
   * For inserts;
   * </pre>
   *
   * <code>FOUND = 8;</code>
   */
  FOUND(8),
  /**
   * <pre>
   * for code invariability
   * </pre>
   *
   * <code>CODE_INVARIANCE_FAILED = 9;</code>
   */
  CODE_INVARIANCE_FAILED(9),
  /**
   * <code>UNCATCHED_EXCEPTION = 10;</code>
   */
  UNCATCHED_EXCEPTION(10),
  /**
   * <code>WRAPPED_LOGGED_RUNTIME = 11;</code>
   */
  WRAPPED_LOGGED_RUNTIME(11),
  /**
   * <code>UPDATE_CONFLICT = 12;</code>
   */
  UPDATE_CONFLICT(12),
  /**
   * <code>DUPLICATE_FOUND = 13;</code>
   */
  DUPLICATE_FOUND(13),
  /**
   * <code>ERRORTYPE_NO_ERROR = 14;</code>
   */
  ERRORTYPE_NO_ERROR(14),
  /**
   * <code>SERVER_CALL_TIMEOUT = 15;</code>
   */
  SERVER_CALL_TIMEOUT(15),
  /**
   * <code>NO_INTERNET = 16;</code>
   */
  NO_INTERNET(16),
  /**
   * <code>UNRESOLVED = 17;</code>
   */
  UNRESOLVED(17),
  UNRECOGNIZED(-1),
  ;

  /**
   * <code>ERORTYPE_UNKNOWN_ERROR = 0;</code>
   */
  public static final int ERORTYPE_UNKNOWN_ERROR_VALUE = 0;
  /**
   * <pre>
   * For top requests from client
   * </pre>
   *
   * <code>PARSE_FAILED = 1;</code>
   */
  public static final int PARSE_FAILED_VALUE = 1;
  /**
   * <code>AUTHENTICATION_FAILED = 2;</code>
   */
  public static final int AUTHENTICATION_FAILED_VALUE = 2;
  /**
   * <code>AUTHORIZATION_FAILED = 3;</code>
   */
  public static final int AUTHORIZATION_FAILED_VALUE = 3;
  /**
   * <pre>
   * For single value in a request
   * </pre>
   *
   * <code>INVALID_VALUE = 4;</code>
   */
  public static final int INVALID_VALUE_VALUE = 4;
  /**
   * <pre>
   * For complex request data validations.
   * </pre>
   *
   * <code>VALIDATION_FAILED = 5;</code>
   */
  public static final int VALIDATION_FAILED_VALUE = 5;
  /**
   * <code>SERVICE_CALL_FAILED = 6;</code>
   */
  public static final int SERVICE_CALL_FAILED_VALUE = 6;
  /**
   * <pre>
   * For read, updates, deletes;
   * </pre>
   *
   * <code>NOT_FOUND = 7;</code>
   */
  public static final int NOT_FOUND_VALUE = 7;
  /**
   * <pre>
   * For inserts;
   * </pre>
   *
   * <code>FOUND = 8;</code>
   */
  public static final int FOUND_VALUE = 8;
  /**
   * <pre>
   * for code invariability
   * </pre>
   *
   * <code>CODE_INVARIANCE_FAILED = 9;</code>
   */
  public static final int CODE_INVARIANCE_FAILED_VALUE = 9;
  /**
   * <code>UNCATCHED_EXCEPTION = 10;</code>
   */
  public static final int UNCATCHED_EXCEPTION_VALUE = 10;
  /**
   * <code>WRAPPED_LOGGED_RUNTIME = 11;</code>
   */
  public static final int WRAPPED_LOGGED_RUNTIME_VALUE = 11;
  /**
   * <code>UPDATE_CONFLICT = 12;</code>
   */
  public static final int UPDATE_CONFLICT_VALUE = 12;
  /**
   * <code>DUPLICATE_FOUND = 13;</code>
   */
  public static final int DUPLICATE_FOUND_VALUE = 13;
  /**
   * <code>ERRORTYPE_NO_ERROR = 14;</code>
   */
  public static final int ERRORTYPE_NO_ERROR_VALUE = 14;
  /**
   * <code>SERVER_CALL_TIMEOUT = 15;</code>
   */
  public static final int SERVER_CALL_TIMEOUT_VALUE = 15;
  /**
   * <code>NO_INTERNET = 16;</code>
   */
  public static final int NO_INTERNET_VALUE = 16;
  /**
   * <code>UNRESOLVED = 17;</code>
   */
  public static final int UNRESOLVED_VALUE = 17;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static ErrorTypePbEnum valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static ErrorTypePbEnum forNumber(int value) {
    switch (value) {
      case 0: return ERORTYPE_UNKNOWN_ERROR;
      case 1: return PARSE_FAILED;
      case 2: return AUTHENTICATION_FAILED;
      case 3: return AUTHORIZATION_FAILED;
      case 4: return INVALID_VALUE;
      case 5: return VALIDATION_FAILED;
      case 6: return SERVICE_CALL_FAILED;
      case 7: return NOT_FOUND;
      case 8: return FOUND;
      case 9: return CODE_INVARIANCE_FAILED;
      case 10: return UNCATCHED_EXCEPTION;
      case 11: return WRAPPED_LOGGED_RUNTIME;
      case 12: return UPDATE_CONFLICT;
      case 13: return DUPLICATE_FOUND;
      case 14: return ERRORTYPE_NO_ERROR;
      case 15: return SERVER_CALL_TIMEOUT;
      case 16: return NO_INTERNET;
      case 17: return UNRESOLVED;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<ErrorTypePbEnum>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      ErrorTypePbEnum> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<ErrorTypePbEnum>() {
          public ErrorTypePbEnum findValueByNumber(int number) {
            return ErrorTypePbEnum.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.tiwari.studence.proto.error.Error.getDescriptor().getEnumTypes().get(0);
  }

  private static final ErrorTypePbEnum[] VALUES = values();

  public static ErrorTypePbEnum valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private ErrorTypePbEnum(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:com.tiwari.studence.proto.error.ErrorTypePbEnum)
}

